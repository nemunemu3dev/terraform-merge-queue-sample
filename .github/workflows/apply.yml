name: Apply

on:
  merge_group:
    types: [checks_requested]

permissions:
  pull-requests: write
  contents: read
  statuses: read
  actions: write

jobs:
  terraform_plan:
    runs-on: ubuntu-latest
    outputs:
      pr_number: ${{ fromJson(steps.get_related_pull_request.outputs.data).repository.mergeQueue.entries.nodes[0].pullRequest.number }}
    steps:
      - uses: actions/checkout@v4
      - uses: aquaproj/aqua-installer@v3.0.1
        with:
          aqua_version: v2.28.0
      - uses: octokit/graphql-action@v2.x
        id: get_related_pull_request
        with:
          query: |
            query($owner: String!, $name: String!) {
              repository(owner: $owner, name: $name) {
                mergeQueue(branch: "main") {
                  entries(last: 1) {
                    nodes {
                      pullRequest {
                        number
                      }
                    }
                  }
                }
              }
            }
          variables: |
            owner: ${{ github.repository_owner }}
            name: ${{ github.event.repository.name }}
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - run: "echo '${{ steps.get_related_pull_request.outputs.data }}'"
      - run: "terraform init"
      - run: "terraform plan -out plan.tfplan"
      - run: "tfcmt --output plan.md plan -- terraform show plan.tfplan"
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const markdown = fs.readFileSync('plan.md', 'utf8');

            const comment = `# Plan for merge queue

            If you approved the deployment at [Action Page](${process.env.ACTION_PAGE_URL}), this plan will be applied automatically.

            ---

            ${markdown}
            `;

            await core.summary
              .addRaw(markdown)
              .write();

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: process.env.PR_NUMBER,
              body: comment,
            });
        env:
          ACTION_PAGE_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          PR_NUMBER: ${{ fromJSON(steps.get_related_pull_request.outputs.data).repository.mergeQueue.entries.nodes[0].pullRequest.number }}

      - uses: actions/upload-artifact@v4
        with:
          name: plan
          path: plan.tfplan

  terraform_apply:
    runs-on: ubuntu-latest
    environment: apply
    needs: terraform_plan
    steps:
      - uses: actions/checkout@v4
      - uses: aquaproj/aqua-installer@v3.0.1
        with:
          aqua_version: v2.28.0
      - uses: actions/download-artifact@v4
        with:
          name: plan
      - run: "terraform init"
      - run: "tfcmt --pr ${{ needs.terraform_plan.outputs.pr_number }} apply -- terraform apply --auto-approve plan.tfplan"
        env:
          GITHUB_TOKEN: ${{ github.token }}
